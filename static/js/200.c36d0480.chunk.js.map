{"version":3,"file":"static/js/200.c36d0480.chunk.js","mappings":"gPACA,EAA2B,kC,SCU3B,EATsB,SAACA,GAEnB,OACQ,gBAAKC,UAAWC,EAAhB,SACKF,EAAMG,Q,UCLvB,EAAyB,+BAAzB,EAAoE,kCAApE,EAAmH,mCCenH,EAbqB,SAACH,GAClB,IAAMI,EAAI,kBAAcJ,EAAMK,IAE9B,OACI,UAAC,KAAD,CAASC,GAAIF,EAAMH,UAAWC,EAA9B,WACI,gBAAKD,UAAWC,EAAhB,UACI,gBAAKK,IAAKP,EAAMQ,YAEpB,gBAAKP,UAAWC,EAAhB,SAA+BF,EAAMS,WCVjD,EAAyB,wBAAzB,EAA4D,0BAA5D,EAAuG,gCAAvG,EAAyL,gCCiDzL,EA1CgB,SAACT,GACb,IAAIU,EAAQV,EAAMW,YAEdC,EAAWF,EAAMG,SAChBC,KAAI,SAAAC,GAAO,OAAI,SAAC,EAAD,CAAeZ,KAAMY,EAAQZ,MAAWY,EAAQV,OAChEW,EAAQN,EAAMO,UACbH,KAAI,SAAAL,GAAI,OAAI,SAAC,EAAD,CAAcA,KAAMA,EAAKA,KAAMJ,GAAII,EAAKJ,GAAkBG,OAAQC,EAAKD,QAAtBC,EAAKJ,OAiBjEa,GAAyBC,EAAAA,EAAAA,GAAU,CACrCC,KAAM,wBADqBD,EAXL,SAACnB,GACvB,OACI,kBAAMqB,SAAUrB,EAAMsB,aAAtB,WACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUC,YAAa,qBACrCjB,KAAM,iBACNkB,SAAU,CAACC,EAAAA,OACf,mBAAQC,KAAK,SAAb,wBASZ,OACI,iBAAK5B,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKc,KAEL,iBAAKf,UAAWC,EAAhB,UACKU,GACD,gBAAKX,UAAWC,EAAhB,UACI,SAACgB,EAAD,CAAwBG,SA3BlB,SAACS,GACnB9B,EAAM+B,eAAeD,EAAOE,4BCUpC,GAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAtBoB,SAACxB,GACrB,MAAO,CACHC,YAAaD,EAAMyB,eAoBE,CAAEJ,eAAAA,EAAAA,EAAgBK,iBAAAA,EAAAA,KAC3CC,EAAAA,EAFJ,CAGEC,I,gJC1BEC,EAA6B,SAAC7B,GAC9B,MAAO,CACH8B,OAAQ9B,EAAM+B,KAAKD,SAIdH,EAAmB,SAACK,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAKC,KAAK5C,MAAMwC,QACT,SAACE,GAAD,UAAeE,KAAK5C,SADI,SAAC,KAAD,CAAUM,GAAG,eAHT,GAChBuC,EAAAA,WAU3B,OAHqCX,EAAAA,EAAAA,IAAQK,EAARL,CAAoCS","sources":["webpack://social-media/./src/components/dialogs/dialog-messages/dialog-messages.module.css?efc1","components/dialogs/dialog-messages/dialog-messages.js","webpack://social-media/./src/components/dialogs/dialog-persons/dialog-persons.module.css?6d56","components/dialogs/dialog-persons/dialog-persons.js","webpack://social-media/./src/components/dialogs/dialogs.module.css?c5d1","components/dialogs/dialogs.js","components/dialogs/dialogs-container.js","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"dialog-messages_messages__fszau\"};","import s from './dialog-messages.module.css';\r\n\r\nconst DialogMessage = (props) => {\r\n\r\n    return (\r\n            <div className={s.messages}>\r\n                {props.text}\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default DialogMessage;","// extracted by mini-css-extract-plugin\nexport default {\"person\":\"dialog-persons_person__juXUh\",\"avatarImg\":\"dialog-persons_avatarImg__6vT73\",\"personName\":\"dialog-persons_personName__zu0EP\"};","import { NavLink } from 'react-router-dom';\r\nimport s from './dialog-persons.module.css';\r\n\r\nconst DialogPerson = (props) => {\r\n    const path = `/dialog/${props.id}`;\r\n\r\n    return (\r\n        <NavLink to={path} className={s.person}>\r\n            <div className={s.avatarImg}>\r\n                <img src={props.avatar}></img>\r\n            </div>\r\n            <div className={s.personName}>{props.name}</div>\r\n        </NavLink>\r\n    )\r\n};\r\n\r\nexport default DialogPerson;","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"dialogs_dialog__3hRCe\",\"messages\":\"dialogs_messages__Pj2hj\",\"message_window\":\"dialogs_message_window__CUnlw\",\"active\":\"dialogs_active__M1b9G\",\"dialog_persons\":\"dialogs_dialog_persons__PUwxX\"};","import { reduxForm } from 'redux-form';\r\nimport { Field } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../validators/validators';\r\nimport { Textarea } from '../common/preloader/form-control/form-control';\r\nimport DialogMessage from './dialog-messages/dialog-messages';\r\nimport DialogPerson from './dialog-persons/dialog-persons';\r\nimport s from './dialogs.module.css';\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsData;\r\n\r\n    let messages = state.msgsData\r\n        .map(message => <DialogMessage text={message.text} key={message.id} />);\r\n    let names = state.namesData\r\n        .map(name => <DialogPerson name={name.name} id={name.id} key={name.id} avatar={name.avatar} />);\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendNewMessage(values.NewMessageBody)\r\n    };\r\n\r\n    const AddNewMessageForm = (props) => {\r\n        return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                <Field component={Textarea} placeholder={\"Enter your message\"}\r\n                    name={\"NewMessageBody\"}\r\n                    validate={[required]}></Field>\r\n                <button type=\"submit\">Send</button>\r\n            </form>\r\n        )\r\n    };\r\n\r\n    const AddNewMessageReduxForm = reduxForm({\r\n        form: \"DialogAddMessageForm\"\r\n    })(AddNewMessageForm)\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <div className={s.dialog_persons}>\r\n                {names}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messages}\r\n                <div className={s.message_window}>\r\n                    <AddNewMessageReduxForm onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Dialogs;","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { sendNewMessage, updateNewMessage } from '../../redux/actions/actions';\r\nimport Dialogs from './dialogs';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: state.dialogsPage,\r\n    }\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         sendNewMessage: () => {\r\n//             dispatch(sendNewMessage())\r\n//         },\r\n//         updateNewMessage: (text) => {\r\n//             dispatch(updateNewMessage(text))\r\n//         }\r\n//     }\r\n// };\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(Dialogs)\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { sendNewMessage, updateNewMessage }),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n    ;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComp extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to=\"/login\" />\r\n            return <Component {...this.props} />\r\n        }\r\n    };\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComp);\r\n\r\n\r\n    return ConnectedAuthRedirectComponent\r\n};\r\n"],"names":["props","className","s","text","path","id","to","src","avatar","name","state","dialogsData","messages","msgsData","map","message","names","namesData","AddNewMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","type","values","sendNewMessage","NewMessageBody","compose","connect","dialogsPage","updateNewMessage","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComp","this","React"],"sourceRoot":""}