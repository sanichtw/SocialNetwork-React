{"version":3,"file":"static/js/841.1cd98f8e.chunk.js","mappings":"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","sources":["webpack://social-media/./src/components/profile/avatar/avatar.module.css?3145","components/profile/avatar/avatar.js","webpack://social-media/./src/components/profile/description/description.module.css?77d6","webpack://social-media/./src/components/profile/description/profile-status/profile-status.module.css?b2a7","components/profile/description/profile-status/profile-status-with-hooks.js","components/profile/description/description.js","webpack://social-media/./src/components/profile/posts/post-item/post-item.module.css?7fdc","components/profile/posts/post-item/post-item.js","webpack://social-media/./src/components/profile/posts/posts.module.css?ca8d","components/profile/posts/posts.js","components/profile/posts/post-container.js","webpack://social-media/./src/components/profile/profile.module.css?5210","components/profile/Profile.js","components/profile/ProfileContainer.js","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ava\":\"avatar_ava__OOq8i\"};","import s from './avatar.module.css';\r\nimport userIcon from './../../../assets/images/user-icon.png'\r\nconst ProfileAvatar = (props) => {\r\n    return (\r\n        <div>\r\n            <img className={s.ava} src={props.photo || userIcon}></img>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileAvatar;","// extracted by mini-css-extract-plugin\nexport default {\"descr\":\"description_descr__YbYn+\",\"description_items\":\"description_description_items__Ch-Yr\"};","// extracted by mini-css-extract-plugin\nexport default {\"profile_status\":\"profile-status_profile_status__z-gMg\"};","import { useEffect, useState } from 'react';\r\nimport style from './profile-status.module.css';\r\n\r\n\r\nconst ProfileStatus = (props) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.profileStatus);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateProfileStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setStatus(props.profileStatus)\r\n    }, [props.profileStatus]);\r\n\r\n    return (\r\n        <div className={style.profile_status}>\r\n            {!editMode &&\r\n                <span onDoubleClick={activateEditMode}>{props.profileStatus || 'No status'}</span>\r\n            }\r\n            {editMode &&\r\n                <input onChange={onStatusChange} onBlur={deActivateEditMode} autoFocus value={status}></input>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatus;","import ProfileAvatar from '../avatar/avatar';\r\nimport s from './description.module.css';\r\nimport Preloader from '../../common/preloader/Preloader'\r\nimport ProfileStatus from './profile-status/profile-status-with-hooks';\r\n\r\nconst Description = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    debugger\r\n    return (\r\n        <>\r\n            <div className={s.descr}>\r\n                <ProfileAvatar photo={props.profile.photos.large} myProfilePhoto={props.myProfilePhoto}\r\n                    userId={props.profile.userId} />\r\n                <div className={s.description_items}>\r\n                    <div>{props.profile.aboutMe}</div>\r\n                    <div>{props.profile.fullName}</div>\r\n                    <div>Old: 23</div>\r\n                </div>\r\n            </div>\r\n            <ProfileStatus profileStatus={props.profileStatus} updateProfileStatus={props.updateProfileStatus} />\r\n        </>\r\n\r\n    )\r\n};\r\n\r\nexport default Description","// extracted by mini-css-extract-plugin\nexport default {\"postItem\":\"post-item_postItem__opKYc\"};","import s from './post-item.module.css';\r\n\r\nconst PostItem = (props) => {\r\n\r\n    let posts = [...props.postsData]\r\n        .reverse()\r\n        .map(post => (\r\n            <div className={s.postItem}>\r\n                <div>\r\n                    <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSbvaBdtJ4GaN7m79jU-Y47NqT3Grvxd7qIZ9VKUZKyU1ynYKxoNdlQCixTRDnliBE62os&usqp=CAU\"></img>\r\n                </div>\r\n                <div>{post.text}</div>\r\n                <div>Likes: {post.likesCount}</div>\r\n            </div>)\r\n        );\r\n\r\n    return (\r\n        <div>\r\n            {posts}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PostItem;","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"posts_posts__vfLsB\"};","import React, { memo } from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Field } from 'redux-form';\r\nimport { maxLengthCreator, minLengthCreator, required } from '../../../validators/validators';\r\nimport { Textarea } from '../../common/preloader/form-control/form-control';\r\nimport PostItem from './post-item/post-item';\r\nimport s from './posts.module.css';\r\n// import { addNewPostActionCreater, updateNewPostActionCreater } from '../../../redux/state'\r\n\r\nconst maxLength = maxLengthCreator(10),\r\n    minLength = minLengthCreator(2);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} placeholder={\"Type your text\"}\r\n                name={\"NewPostText\"} validate={[required, maxLength, minLength]} />\r\n            <button>Add Post</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddNewPostReduxForm = reduxForm({\r\n    form: \"ProfileAddNewPostForm\"\r\n})(AddNewPostForm)\r\n\r\nconst Posts = React.memo(props => {\r\n    let state = props.profileData;\r\n\r\n    const onAddNewPost = (values) => {\r\n        props.addPost(values.NewPostText)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.posts}>\r\n                <h3>\r\n                    My Posts\r\n                </h3>\r\n                <AddNewPostReduxForm onSubmit={onAddNewPost} />\r\n                <PostItem postsData={state.postsData} />\r\n            </div>\r\n        </div >\r\n    )\r\n});\r\n\r\nexport default Posts;","import { connect } from \"react-redux\";\r\nimport { AddPostActionCreator } from \"../../../redux/actions/actions\";\r\nimport Posts from \"./posts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profileData: state.profilePage\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (text) => {\r\n            dispatch(AddPostActionCreator(text))\r\n        },\r\n    }\r\n};\r\n\r\nconst PostContainer = connect(mapStateToProps, mapDispatchToProps)(Posts)\r\n\r\nexport default PostContainer;","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"profile_profile__I67jP\"};","import Description from './description/description';\r\nimport PostContainer from './posts/post-container';\r\nimport s from './profile.module.css'\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.profile}>\r\n            <Description profile={props.profile} \r\n            myProfilePhoto={props.profilePhoto}\r\n            profileStatus={props.profileStatus}\r\n            updateProfileStatus={props.updateProfileStatus} />\r\n            <PostContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getProfile, getProfileStatus, updateProfileStatus } from '../../redux/actions/actions';\r\nimport Profile from './Profile';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport withRouter from '../../hoc/withRouter';\r\n\r\nclass ProfileContainer extends Component {\r\n    componentDidMount() {\r\n        let userId = this.props.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getProfileStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} />\r\n        )\r\n    }\r\n\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        profilePhoto: state.profilePage.profilePhoto,\r\n        profileStatus: state.profilePage.profileStatus,\r\n        authorizedUserId: state.auth.userId\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getProfile, getProfileStatus, updateProfileStatus }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComp extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to=\"/login\" />\r\n            return <Component {...this.props} />\r\n        }\r\n    };\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComp);\r\n\r\n\r\n    return ConnectedAuthRedirectComponent\r\n};\r\n"],"names":["props","className","s","src","photo","userIcon","useState","editMode","setEditMode","profileStatus","status","setStatus","useEffect","style","onDoubleClick","onChange","e","target","value","onBlur","updateProfileStatus","autoFocus","profile","photos","large","myProfilePhoto","userId","aboutMe","fullName","Preloader","posts","postsData","reverse","map","post","text","likesCount","maxLength","maxLengthCreator","minLength","minLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","React","state","profileData","values","addPost","NewPostText","connect","profilePage","dispatch","AddPostActionCreator","Posts","profilePhoto","ProfileContainer","this","params","authorizedUserId","getProfile","getProfileStatus","Component","compose","auth","withRouter","withAuthRedirect","mapStateToPropsForRedirect","isAuth","RedirectComp","to"],"sourceRoot":""}